{"ast":null,"code":"import _classCallCheck from \"/Users/vietle/Documents/personal-project/MyPersonalWebpage/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vietle/Documents/personal-project/MyPersonalWebpage/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _inherits from \"/Users/vietle/Documents/personal-project/MyPersonalWebpage/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/vietle/Documents/personal-project/MyPersonalWebpage/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport Input from './input';\nimport { INPUT_EVENT_TYPES } from '../constants';\nvar MOUSE_EVENTS = INPUT_EVENT_TYPES.MOUSE_EVENTS;\nvar MOVE_EVENT_TYPE = 'pointermove';\nvar OVER_EVENT_TYPE = 'pointerover';\nvar OUT_EVENT_TYPE = 'pointerout';\nvar ENTER_EVENT_TYPE = 'pointerenter';\nvar LEAVE_EVENT_TYPE = 'pointerleave';\n/**\n * Hammer.js swallows 'move' events (for pointer/touch/mouse)\n * when the pointer is not down. This class sets up a handler\n * specifically for these events to work around this limitation.\n * Note that this could be extended to more intelligently handle\n * move events across input types, e.g. storing multiple simultaneous\n * pointer/touch events, calculating speed/direction, etc.\n */\nvar MoveInput = /*#__PURE__*/function (_Input) {\n  _inherits(MoveInput, _Input);\n  var _super = _createSuper(MoveInput);\n  function MoveInput(element, callback, options) {\n    var _this;\n    _classCallCheck(this, MoveInput);\n    _this = _super.call(this, element, callback, options);\n    _this.handleEvent = function (event) {\n      _this.handleOverEvent(event);\n      _this.handleOutEvent(event);\n      _this.handleEnterEvent(event);\n      _this.handleLeaveEvent(event);\n      _this.handleMoveEvent(event);\n    };\n    _this.pressed = false;\n    var enable = _this.options.enable;\n    _this.enableMoveEvent = enable;\n    _this.enableLeaveEvent = enable;\n    _this.enableEnterEvent = enable;\n    _this.enableOutEvent = enable;\n    _this.enableOverEvent = enable;\n    _this.events = (_this.options.events || []).concat(MOUSE_EVENTS);\n    _this.events.forEach(function (event) {\n      return element.addEventListener(event, _this.handleEvent);\n    });\n    return _this;\n  }\n  _createClass(MoveInput, [{\n    key: \"destroy\",\n    value: function destroy() {\n      var _this2 = this;\n      this.events.forEach(function (event) {\n        return _this2.element.removeEventListener(event, _this2.handleEvent);\n      });\n    }\n    /**\n     * Enable this input (begin processing events)\n     * if the specified event type is among those handled by this input.\n     */\n  }, {\n    key: \"enableEventType\",\n    value: function enableEventType(eventType, enabled) {\n      if (eventType === MOVE_EVENT_TYPE) {\n        this.enableMoveEvent = enabled;\n      }\n      if (eventType === OVER_EVENT_TYPE) {\n        this.enableOverEvent = enabled;\n      }\n      if (eventType === OUT_EVENT_TYPE) {\n        this.enableOutEvent = enabled;\n      }\n      if (eventType === ENTER_EVENT_TYPE) {\n        this.enableEnterEvent = enabled;\n      }\n      if (eventType === LEAVE_EVENT_TYPE) {\n        this.enableLeaveEvent = enabled;\n      }\n    }\n  }, {\n    key: \"handleOverEvent\",\n    value: function handleOverEvent(event) {\n      if (this.enableOverEvent) {\n        if (event.type === 'mouseover') {\n          this._emit(OVER_EVENT_TYPE, event);\n        }\n      }\n    }\n  }, {\n    key: \"handleOutEvent\",\n    value: function handleOutEvent(event) {\n      if (this.enableOutEvent) {\n        if (event.type === 'mouseout') {\n          this._emit(OUT_EVENT_TYPE, event);\n        }\n      }\n    }\n  }, {\n    key: \"handleEnterEvent\",\n    value: function handleEnterEvent(event) {\n      if (this.enableEnterEvent) {\n        if (event.type === 'mouseenter') {\n          this._emit(ENTER_EVENT_TYPE, event);\n        }\n      }\n    }\n  }, {\n    key: \"handleLeaveEvent\",\n    value: function handleLeaveEvent(event) {\n      if (this.enableLeaveEvent) {\n        if (event.type === 'mouseleave') {\n          this._emit(LEAVE_EVENT_TYPE, event);\n        }\n      }\n    }\n  }, {\n    key: \"handleMoveEvent\",\n    value: function handleMoveEvent(event) {\n      if (this.enableMoveEvent) {\n        switch (event.type) {\n          case 'mousedown':\n            if (event.button >= 0) {\n              // Button is down\n              this.pressed = true;\n            }\n            break;\n          case 'mousemove':\n            // Move events use `which` to track the button being pressed\n            if (event.which === 0) {\n              // Button is not down\n              this.pressed = false;\n            }\n            if (!this.pressed) {\n              // Drag events are emitted by hammer already\n              // we just need to emit the move event on hover\n              this._emit(MOVE_EVENT_TYPE, event);\n            }\n            break;\n          case 'mouseup':\n            this.pressed = false;\n            break;\n          default:\n        }\n      }\n    }\n  }, {\n    key: \"_emit\",\n    value: function _emit(type, event) {\n      this.callback({\n        type: type,\n        center: {\n          x: event.clientX,\n          y: event.clientY\n        },\n        srcEvent: event,\n        pointerType: 'mouse',\n        target: event.target\n      });\n    }\n  }]);\n  return MoveInput;\n}(Input);\nexport { MoveInput as default };","map":{"version":3,"names":["Input","INPUT_EVENT_TYPES","MOUSE_EVENTS","MOVE_EVENT_TYPE","OVER_EVENT_TYPE","OUT_EVENT_TYPE","ENTER_EVENT_TYPE","LEAVE_EVENT_TYPE","MoveInput","_Input","_inherits","_super","_createSuper","element","callback","options","_this","_classCallCheck","call","handleEvent","event","handleOverEvent","handleOutEvent","handleEnterEvent","handleLeaveEvent","handleMoveEvent","pressed","enable","enableMoveEvent","enableLeaveEvent","enableEnterEvent","enableOutEvent","enableOverEvent","events","concat","forEach","addEventListener","_createClass","key","value","destroy","_this2","removeEventListener","enableEventType","eventType","enabled","type","_emit","button","which","center","x","clientX","y","clientY","srcEvent","pointerType","target","default"],"sources":["../../../src/inputs/move-input.ts"],"sourcesContent":[null],"mappings":";;;;AACA,OAAOA,KAAqB,MAAM,SAAS;AAC3C,SAAQC,iBAAiB,QAAO,cAAc;AAE9C,IAAOC,YAAY,GAAID,iBAAiB,CAAjCC,YAAY;AACnB,IAAMC,eAAe,GAAG,aAAa;AACrC,IAAMC,eAAe,GAAG,aAAa;AACrC,IAAMC,cAAc,GAAG,YAAY;AACnC,IAAMC,gBAAgB,GAAG,cAAc;AACvC,IAAMC,gBAAgB,GAAG,cAAc;AAEvC;;;;;;;;AAAA,IAQqBC,SAAU,0BAAAC,MAAA;EAAAC,SAAA,CAAAF,SAAA,EAAAC,MAAA;EAAA,IAAAE,MAAA,GAAAC,YAAA,CAAAJ,SAAA;EAU7B,SAAAA,UACEK,OAAoB,EACpBC,QAAiD,EACjDC,OAAqB;IAAA,IAAAC,KAAA;IAAAC,eAAA,OAAAT,SAAA;IAErBQ,KAAA,GAAAL,MAAA,CAAAO,IAAA,OAAML,OAAO,EAAEC,QAAQ,EAAEC,OAAO;IA0ClCC,KAAA,CAAAG,WAAW,GAAG,UAACC,KAAmB,EAAI;MACpCJ,KAAA,CAAKK,eAAe,CAACD,KAAK,CAAC;MAC3BJ,KAAA,CAAKM,cAAc,CAACF,KAAK,CAAC;MAC1BJ,KAAA,CAAKO,gBAAgB,CAACH,KAAK,CAAC;MAC5BJ,KAAA,CAAKQ,gBAAgB,CAACJ,KAAK,CAAC;MAC5BJ,KAAA,CAAKS,eAAe,CAACL,KAAK,CAAC;IAC7B,CAAC;IA9CCJ,KAAA,CAAKU,OAAO,GAAG,KAAK;IACpB,IAAOC,MAAM,GAAIX,KAAA,CAAKD,OAAO,CAAtBY,MAAM;IAEbX,KAAA,CAAKY,eAAe,GAAGD,MAAM;IAC7BX,KAAA,CAAKa,gBAAgB,GAAGF,MAAM;IAC9BX,KAAA,CAAKc,gBAAgB,GAAGH,MAAM;IAC9BX,KAAA,CAAKe,cAAc,GAAGJ,MAAM;IAC5BX,KAAA,CAAKgB,eAAe,GAAGL,MAAM;IAE7BX,KAAA,CAAKiB,MAAM,GAAG,CAACjB,KAAA,CAAKD,OAAO,CAACkB,MAAM,IAAI,EAAE,EAAEC,MAAM,CAAChC,YAAY,CAAC;IAE9Dc,KAAA,CAAKiB,MAAM,CAACE,OAAO,CAAC,UAAAf,KAAK;MAAA,OAAIP,OAAO,CAACuB,gBAAgB,CAAChB,KAAK,EAAEJ,KAAA,CAAKG,WAAW,CAAC;IAAA,EAAC;IAAC,OAAAH,KAAA;EAClF;EAACqB,YAAA,CAAA7B,SAAA;IAAA8B,GAAA;IAAAC,KAAA,EAED,SAAAC,QAAA,EAAO;MAAA,IAAAC,MAAA;MACL,IAAI,CAACR,MAAM,CAACE,OAAO,CAAC,UAAAf,KAAK;QAAA,OAAIqB,MAAI,CAAC5B,OAAO,CAAC6B,mBAAmB,CAACtB,KAAK,EAAEqB,MAAI,CAACtB,WAAW,CAAC;MAAA,EAAC;IACzF;IAEA;;;;EAAA;IAAAmB,GAAA;IAAAC,KAAA,EAIA,SAAAI,gBAAgBC,SAAiB,EAAEC,OAAgB;MACjD,IAAID,SAAS,KAAKzC,eAAe,EAAE;QACjC,IAAI,CAACyB,eAAe,GAAGiB,OAAO;;MAEhC,IAAID,SAAS,KAAKxC,eAAe,EAAE;QACjC,IAAI,CAAC4B,eAAe,GAAGa,OAAO;;MAEhC,IAAID,SAAS,KAAKvC,cAAc,EAAE;QAChC,IAAI,CAAC0B,cAAc,GAAGc,OAAO;;MAE/B,IAAID,SAAS,KAAKtC,gBAAgB,EAAE;QAClC,IAAI,CAACwB,gBAAgB,GAAGe,OAAO;;MAEjC,IAAID,SAAS,KAAKrC,gBAAgB,EAAE;QAClC,IAAI,CAACsB,gBAAgB,GAAGgB,OAAO;;IAEnC;EAAC;IAAAP,GAAA;IAAAC,KAAA,EAUD,SAAAlB,gBAAgBD,KAAmB;MACjC,IAAI,IAAI,CAACY,eAAe,EAAE;QACxB,IAAIZ,KAAK,CAAC0B,IAAI,KAAK,WAAW,EAAE;UAC9B,IAAI,CAACC,KAAK,CAAC3C,eAAe,EAAEgB,KAAK,CAAC;;;IAGxC;EAAC;IAAAkB,GAAA;IAAAC,KAAA,EAED,SAAAjB,eAAeF,KAAmB;MAChC,IAAI,IAAI,CAACW,cAAc,EAAE;QACvB,IAAIX,KAAK,CAAC0B,IAAI,KAAK,UAAU,EAAE;UAC7B,IAAI,CAACC,KAAK,CAAC1C,cAAc,EAAEe,KAAK,CAAC;;;IAGvC;EAAC;IAAAkB,GAAA;IAAAC,KAAA,EAED,SAAAhB,iBAAiBH,KAAmB;MAClC,IAAI,IAAI,CAACU,gBAAgB,EAAE;QACzB,IAAIV,KAAK,CAAC0B,IAAI,KAAK,YAAY,EAAE;UAC/B,IAAI,CAACC,KAAK,CAACzC,gBAAgB,EAAEc,KAAK,CAAC;;;IAGzC;EAAC;IAAAkB,GAAA;IAAAC,KAAA,EAED,SAAAf,iBAAiBJ,KAAmB;MAClC,IAAI,IAAI,CAACS,gBAAgB,EAAE;QACzB,IAAIT,KAAK,CAAC0B,IAAI,KAAK,YAAY,EAAE;UAC/B,IAAI,CAACC,KAAK,CAACxC,gBAAgB,EAAEa,KAAK,CAAC;;;IAGzC;EAAC;IAAAkB,GAAA;IAAAC,KAAA,EAED,SAAAd,gBAAgBL,KAAmB;MACjC,IAAI,IAAI,CAACQ,eAAe,EAAE;QACxB,QAAQR,KAAK,CAAC0B,IAAI;UAChB,KAAK,WAAW;YACd,IAAI1B,KAAK,CAAC4B,MAAM,IAAI,CAAC,EAAE;cACrB;cACA,IAAI,CAACtB,OAAO,GAAG,IAAI;;YAErB;UACF,KAAK,WAAW;YACd;YACA,IAAIN,KAAK,CAAC6B,KAAK,KAAK,CAAC,EAAE;cACrB;cACA,IAAI,CAACvB,OAAO,GAAG,KAAK;;YAEtB,IAAI,CAAC,IAAI,CAACA,OAAO,EAAE;cACjB;cACA;cACA,IAAI,CAACqB,KAAK,CAAC5C,eAAe,EAAEiB,KAAK,CAAC;;YAEpC;UACF,KAAK,SAAS;YACZ,IAAI,CAACM,OAAO,GAAG,KAAK;YACpB;UACF;QAAQ;;IAGd;EAAC;IAAAY,GAAA;IAAAC,KAAA,EAED,SAAAQ,MACED,IAAoF,EACpF1B,KAAmB;MAEnB,IAAI,CAACN,QAAQ,CAAC;QACZgC,IAAI,EAAJA,IAAI;QACJI,MAAM,EAAE;UACNC,CAAC,EAAE/B,KAAK,CAACgC,OAAO;UAChBC,CAAC,EAAEjC,KAAK,CAACkC;SACV;QACDC,QAAQ,EAAEnC,KAAK;QACfoC,WAAW,EAAE,OAAO;QACpBC,MAAM,EAAErC,KAAK,CAACqC;OACf,CAAC;IACJ;EAAC;EAAA,OAAAjD,SAAA;AAAA,EA5IoCR,KAA2C;AAAA,SAA7DQ,SAAU,IAAAkD,OAAA"},"metadata":{},"sourceType":"module"}