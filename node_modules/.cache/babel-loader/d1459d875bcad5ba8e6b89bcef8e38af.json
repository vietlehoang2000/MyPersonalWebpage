{"ast":null,"code":"var EPSILON = 1e-7;\nfunction isArray(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value);\n}\nexport function equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (var i = 0; i < a.length; ++i) {\n      if (!equals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return Math.abs(a - b) <= EPSILON;\n}\nexport function clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\nexport function lerp(a, b, t) {\n  if (isArray(a)) {\n    return a.map(function (ai, i) {\n      return lerp(ai, b[i], t);\n    });\n  }\n  return t * b + (1 - t) * a;\n}","map":{"version":3,"names":["EPSILON","isArray","value","Array","ArrayBuffer","isView","equals","a","b","length","i","Math","abs","clamp","min","max","lerp","t","map","ai"],"sources":["../../../src/utils/math-utils.js"],"sourcesContent":["const EPSILON = 1e-7;\n\n// Returns true if value is either an array or a typed array\nfunction isArray(value) {\n  return Array.isArray(value) || ArrayBuffer.isView(value);\n}\n\n// TODO: use math.gl\nexport function equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (isArray(a) && isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; ++i) {\n      if (!equals(a[i], b[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return Math.abs(a - b) <= EPSILON;\n}\n\nexport function clamp(value, min, max) {\n  return Math.max(min, Math.min(max, value));\n}\n\n// Interpolate between two numbers or two arrays\nexport function lerp(a, b, t) {\n  if (isArray(a)) {\n    return a.map((ai, i) => lerp(ai, b[i], t));\n  }\n  return t * b + (1 - t) * a;\n}\n"],"mappings":"AAAA,IAAMA,OAAO,GAAG,IAAhB;AAGA,SAASC,OAATA,CAAiBC,KAAjB,EAAwB;EACtB,OAAOC,KAAK,CAACF,OAAN,CAAcC,KAAd,KAAwBE,WAAW,CAACC,MAAZ,CAAmBH,KAAnB,CAA/B;AACD;AAGD,OAAO,SAASI,MAATA,CAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;EAC3B,IAAID,CAAC,KAAKC,CAAV,EAAa;IACX,OAAO,IAAP;EACD;EACD,IAAIP,OAAO,CAACM,CAAD,CAAP,IAAcN,OAAO,CAACO,CAAD,CAAzB,EAA8B;IAC5B,IAAID,CAAC,CAACE,MAAF,KAAaD,CAAC,CAACC,MAAnB,EAA2B;MACzB,OAAO,KAAP;IACD;IACD,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,CAAC,CAACE,MAAtB,EAA8B,EAAEC,CAAhC,EAAmC;MACjC,IAAI,CAACJ,MAAM,CAACC,CAAC,CAACG,CAAD,CAAF,EAAOF,CAAC,CAACE,CAAD,CAAR,CAAX,EAAyB;QACvB,OAAO,KAAP;MACD;IACF;IACD,OAAO,IAAP;EACD;EACD,OAAOC,IAAI,CAACC,GAAL,CAASL,CAAC,GAAGC,CAAb,KAAmBR,OAA1B;AACD;AAED,OAAO,SAASa,KAATA,CAAeX,KAAf,EAAsBY,GAAtB,EAA2BC,GAA3B,EAAgC;EACrC,OAAOJ,IAAI,CAACI,GAAL,CAASD,GAAT,EAAcH,IAAI,CAACG,GAAL,CAASC,GAAT,EAAcb,KAAd,CAAd,CAAP;AACD;AAGD,OAAO,SAASc,IAATA,CAAcT,CAAd,EAAiBC,CAAjB,EAAoBS,CAApB,EAAuB;EAC5B,IAAIhB,OAAO,CAACM,CAAD,CAAX,EAAgB;IACd,OAAOA,CAAC,CAACW,GAAF,CAAM,UAACC,EAAD,EAAKT,CAAL;MAAA,OAAWM,IAAI,CAACG,EAAD,EAAKX,CAAC,CAACE,CAAD,CAAN,EAAWO,CAAX,CAAf;IAAA,CAAN,CAAP;EACD;EACD,OAAOA,CAAC,GAAGT,CAAJ,GAAQ,CAAC,IAAIS,CAAL,IAAUV,CAAzB;AACD"},"metadata":{},"sourceType":"module"}