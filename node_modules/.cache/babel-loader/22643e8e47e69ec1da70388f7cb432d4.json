{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport * as React from 'react';\nimport { useEffect, useCallback, useState, useRef, useMemo } from 'react';\nimport * as PropTypes from 'prop-types';\nimport mapboxgl from '../utils/mapboxgl';\nimport useMapControl, { mapControlDefaultProps, mapControlPropTypes } from './use-map-control';\nvar propTypes = Object.assign({}, mapControlPropTypes, {\n  toggleLabel: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  compact: PropTypes.bool,\n  customAttribution: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n});\nvar defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  toggleLabel: 'Toggle Attribution'\n});\nfunction setupAttributioncontrol(opts, map, container, attributionContainer) {\n  var control = new mapboxgl.AttributionControl(opts);\n  control._map = map;\n  control._container = container;\n  control._innerContainer = attributionContainer;\n  control._updateAttributions();\n  control._updateEditLink();\n  map.on('styledata', control._updateData);\n  map.on('sourcedata', control._updateData);\n  return control;\n}\nfunction removeAttributionControl(control) {\n  control._map.off('styledata', control._updateData);\n  control._map.off('sourcedata', control._updateData);\n}\nfunction AttributionControl(props) {\n  var _useMapControl = useMapControl(props),\n    context = _useMapControl.context,\n    containerRef = _useMapControl.containerRef;\n  var innerContainerRef = useRef(null);\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    showCompact = _useState2[0],\n    setShowCompact = _useState2[1];\n  useEffect(function () {\n    var control;\n    if (context.map) {\n      control = setupAttributioncontrol({\n        customAttribution: props.customAttribution\n      }, context.map, containerRef.current, innerContainerRef.current);\n    }\n    return function () {\n      return control && removeAttributionControl(control);\n    };\n  }, [context.map]);\n  var compact = props.compact === undefined ? context.viewport.width <= 640 : props.compact;\n  useEffect(function () {\n    if (!compact && showCompact) {\n      setShowCompact(false);\n    }\n  }, [compact]);\n  var toggleAttribution = useCallback(function () {\n    return setShowCompact(function (value) {\n      return !value;\n    });\n  }, []);\n  var style = useMemo(function () {\n    return _objectSpread({\n      position: 'absolute'\n    }, props.style);\n  }, [props.style]);\n  return React.createElement(\"div\", {\n    style: style,\n    className: props.className\n  }, React.createElement(\"div\", {\n    ref: containerRef,\n    \"aria-pressed\": showCompact,\n    className: \"mapboxgl-ctrl mapboxgl-ctrl-attrib \".concat(compact ? 'mapboxgl-compact' : '', \" \").concat(showCompact ? 'mapboxgl-compact-show' : '')\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    className: \"mapboxgl-ctrl-attrib-button\",\n    title: props.toggleLabel,\n    onClick: toggleAttribution\n  }), React.createElement(\"div\", {\n    ref: innerContainerRef,\n    className: \"mapboxgl-ctrl-attrib-inner\",\n    role: \"list\"\n  })));\n}\nAttributionControl.propTypes = propTypes;\nAttributionControl.defaultProps = defaultProps;\nexport default React.memo(AttributionControl);","map":{"version":3,"names":["React","useEffect","useCallback","useState","useRef","useMemo","PropTypes","mapboxgl","useMapControl","mapControlDefaultProps","mapControlPropTypes","propTypes","Object","assign","toggleLabel","string","className","style","object","compact","bool","customAttribution","oneOfType","arrayOf","defaultProps","setupAttributioncontrol","opts","map","container","attributionContainer","control","AttributionControl","_map","_container","_innerContainer","_updateAttributions","_updateEditLink","on","_updateData","removeAttributionControl","off","props","_useMapControl","context","containerRef","innerContainerRef","_useState","_useState2","_slicedToArray","showCompact","setShowCompact","current","undefined","viewport","width","toggleAttribution","value","_objectSpread","position","createElement","ref","concat","type","title","onClick","role","memo"],"sources":["../../../src/components/attribution-control.js"],"sourcesContent":["import * as React from 'react';\nimport {useEffect, useCallback, useState, useRef, useMemo} from 'react';\nimport * as PropTypes from 'prop-types';\nimport mapboxgl from '../utils/mapboxgl';\nimport useMapControl, {mapControlDefaultProps, mapControlPropTypes} from './use-map-control';\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  toggleLabel: PropTypes.string,\n  className: PropTypes.string,\n  style: PropTypes.object,\n  compact: PropTypes.bool,\n  customAttribution: PropTypes.oneOfType([PropTypes.string, PropTypes.arrayOf(PropTypes.string)])\n});\n\nconst defaultProps = Object.assign({}, mapControlDefaultProps, {\n  className: '',\n  toggleLabel: 'Toggle Attribution'\n});\n\nfunction setupAttributioncontrol(opts, map, container, attributionContainer) {\n  const control = new mapboxgl.AttributionControl(opts);\n  control._map = map;\n  control._container = container;\n  control._innerContainer = attributionContainer;\n\n  // from AttributionControl.onAdd()\n  control._updateAttributions();\n  control._updateEditLink();\n  map.on('styledata', control._updateData);\n  map.on('sourcedata', control._updateData);\n\n  return control;\n}\n\nfunction removeAttributionControl(control) {\n  control._map.off('styledata', control._updateData);\n  control._map.off('sourcedata', control._updateData);\n}\n\nfunction AttributionControl(props) {\n  const {context, containerRef} = useMapControl(props);\n  const innerContainerRef = useRef(null);\n  const [showCompact, setShowCompact] = useState(false);\n\n  useEffect(() => {\n    let control;\n    if (context.map) {\n      control = setupAttributioncontrol(\n        {\n          customAttribution: props.customAttribution\n        },\n        context.map,\n        containerRef.current,\n        innerContainerRef.current\n      );\n    }\n\n    return () => control && removeAttributionControl(control);\n  }, [context.map]);\n\n  const compact = props.compact === undefined ? context.viewport.width <= 640 : props.compact;\n\n  useEffect(() => {\n    if (!compact && showCompact) {\n      setShowCompact(false);\n    }\n  }, [compact]);\n\n  const toggleAttribution = useCallback(() => setShowCompact(value => !value), []);\n  const style = useMemo(() => ({position: 'absolute', ...props.style}), [props.style]);\n\n  return (\n    <div style={style} className={props.className}>\n      <div\n        ref={containerRef}\n        aria-pressed={showCompact}\n        className={`mapboxgl-ctrl mapboxgl-ctrl-attrib ${compact ? 'mapboxgl-compact' : ''} ${\n          showCompact ? 'mapboxgl-compact-show' : ''\n        }`}\n      >\n        <button\n          type=\"button\"\n          className=\"mapboxgl-ctrl-attrib-button\"\n          title={props.toggleLabel}\n          onClick={toggleAttribution}\n        />\n        <div ref={innerContainerRef} className=\"mapboxgl-ctrl-attrib-inner\" role=\"list\" />\n      </div>\n    </div>\n  );\n}\n\nAttributionControl.propTypes = propTypes;\nAttributionControl.defaultProps = defaultProps;\n\nexport default React.memo(AttributionControl);\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}