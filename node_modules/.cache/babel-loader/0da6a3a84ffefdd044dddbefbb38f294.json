{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport WebMercatorViewport, { normalizeViewportProps } from 'viewport-mercator-project';\nimport { clamp } from './math-utils';\nimport assert from './assert';\nexport var MAPBOX_LIMITS = {\n  minZoom: 0,\n  maxZoom: 24,\n  minPitch: 0,\n  maxPitch: 85\n};\nvar DEFAULT_STATE = {\n  pitch: 0,\n  bearing: 0,\n  altitude: 1.5\n};\nvar PITCH_MOUSE_THRESHOLD = 5;\nvar PITCH_ACCEL = 1.2;\nvar MapState = function () {\n  function MapState(_ref) {\n    var width = _ref.width,\n      height = _ref.height,\n      latitude = _ref.latitude,\n      longitude = _ref.longitude,\n      zoom = _ref.zoom,\n      _ref$bearing = _ref.bearing,\n      bearing = _ref$bearing === void 0 ? DEFAULT_STATE.bearing : _ref$bearing,\n      _ref$pitch = _ref.pitch,\n      pitch = _ref$pitch === void 0 ? DEFAULT_STATE.pitch : _ref$pitch,\n      _ref$altitude = _ref.altitude,\n      altitude = _ref$altitude === void 0 ? DEFAULT_STATE.altitude : _ref$altitude,\n      _ref$maxZoom = _ref.maxZoom,\n      maxZoom = _ref$maxZoom === void 0 ? MAPBOX_LIMITS.maxZoom : _ref$maxZoom,\n      _ref$minZoom = _ref.minZoom,\n      minZoom = _ref$minZoom === void 0 ? MAPBOX_LIMITS.minZoom : _ref$minZoom,\n      _ref$maxPitch = _ref.maxPitch,\n      maxPitch = _ref$maxPitch === void 0 ? MAPBOX_LIMITS.maxPitch : _ref$maxPitch,\n      _ref$minPitch = _ref.minPitch,\n      minPitch = _ref$minPitch === void 0 ? MAPBOX_LIMITS.minPitch : _ref$minPitch,\n      transitionDuration = _ref.transitionDuration,\n      transitionEasing = _ref.transitionEasing,\n      transitionInterpolator = _ref.transitionInterpolator,\n      transitionInterruption = _ref.transitionInterruption,\n      startPanLngLat = _ref.startPanLngLat,\n      startZoomLngLat = _ref.startZoomLngLat,\n      startRotatePos = _ref.startRotatePos,\n      startBearing = _ref.startBearing,\n      startPitch = _ref.startPitch,\n      startZoom = _ref.startZoom;\n    _classCallCheck(this, MapState);\n    assert(Number.isFinite(width), '`width` must be supplied');\n    assert(Number.isFinite(height), '`height` must be supplied');\n    assert(Number.isFinite(longitude), '`longitude` must be supplied');\n    assert(Number.isFinite(latitude), '`latitude` must be supplied');\n    assert(Number.isFinite(zoom), '`zoom` must be supplied');\n    this._viewportProps = this._applyConstraints({\n      width: width,\n      height: height,\n      latitude: latitude,\n      longitude: longitude,\n      zoom: zoom,\n      bearing: bearing,\n      pitch: pitch,\n      altitude: altitude,\n      maxZoom: maxZoom,\n      minZoom: minZoom,\n      maxPitch: maxPitch,\n      minPitch: minPitch,\n      transitionDuration: transitionDuration,\n      transitionEasing: transitionEasing,\n      transitionInterpolator: transitionInterpolator,\n      transitionInterruption: transitionInterruption\n    });\n    this._state = {\n      startPanLngLat: startPanLngLat,\n      startZoomLngLat: startZoomLngLat,\n      startRotatePos: startRotatePos,\n      startBearing: startBearing,\n      startPitch: startPitch,\n      startZoom: startZoom\n    };\n  }\n  _createClass(MapState, [{\n    key: \"getViewportProps\",\n    value: function getViewportProps() {\n      return this._viewportProps;\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this._state;\n    }\n  }, {\n    key: \"panStart\",\n    value: function panStart(_ref2) {\n      var pos = _ref2.pos;\n      return this._getUpdatedMapState({\n        startPanLngLat: this._unproject(pos)\n      });\n    }\n  }, {\n    key: \"pan\",\n    value: function pan(_ref3) {\n      var pos = _ref3.pos,\n        startPos = _ref3.startPos;\n      var startPanLngLat = this._state.startPanLngLat || this._unproject(startPos);\n      if (!startPanLngLat) {\n        return this;\n      }\n      var _this$_calculateNewLn = this._calculateNewLngLat({\n          startPanLngLat: startPanLngLat,\n          pos: pos\n        }),\n        _this$_calculateNewLn2 = _slicedToArray(_this$_calculateNewLn, 2),\n        longitude = _this$_calculateNewLn2[0],\n        latitude = _this$_calculateNewLn2[1];\n      return this._getUpdatedMapState({\n        longitude: longitude,\n        latitude: latitude\n      });\n    }\n  }, {\n    key: \"panEnd\",\n    value: function panEnd() {\n      return this._getUpdatedMapState({\n        startPanLngLat: null\n      });\n    }\n  }, {\n    key: \"rotateStart\",\n    value: function rotateStart(_ref4) {\n      var pos = _ref4.pos;\n      return this._getUpdatedMapState({\n        startRotatePos: pos,\n        startBearing: this._viewportProps.bearing,\n        startPitch: this._viewportProps.pitch\n      });\n    }\n  }, {\n    key: \"rotate\",\n    value: function rotate(_ref5) {\n      var pos = _ref5.pos,\n        _ref5$deltaAngleX = _ref5.deltaAngleX,\n        deltaAngleX = _ref5$deltaAngleX === void 0 ? 0 : _ref5$deltaAngleX,\n        _ref5$deltaAngleY = _ref5.deltaAngleY,\n        deltaAngleY = _ref5$deltaAngleY === void 0 ? 0 : _ref5$deltaAngleY;\n      var _this$_state = this._state,\n        startRotatePos = _this$_state.startRotatePos,\n        startBearing = _this$_state.startBearing,\n        startPitch = _this$_state.startPitch;\n      if (!Number.isFinite(startBearing) || !Number.isFinite(startPitch)) {\n        return this;\n      }\n      var newRotation;\n      if (pos) {\n        newRotation = this._calculateNewPitchAndBearing(_objectSpread(_objectSpread({}, this._getRotationParams(pos, startRotatePos)), {}, {\n          startBearing: startBearing,\n          startPitch: startPitch\n        }));\n      } else {\n        newRotation = {\n          bearing: startBearing + deltaAngleX,\n          pitch: startPitch + deltaAngleY\n        };\n      }\n      return this._getUpdatedMapState(newRotation);\n    }\n  }, {\n    key: \"rotateEnd\",\n    value: function rotateEnd() {\n      return this._getUpdatedMapState({\n        startBearing: null,\n        startPitch: null\n      });\n    }\n  }, {\n    key: \"zoomStart\",\n    value: function zoomStart(_ref6) {\n      var pos = _ref6.pos;\n      return this._getUpdatedMapState({\n        startZoomLngLat: this._unproject(pos),\n        startZoom: this._viewportProps.zoom\n      });\n    }\n  }, {\n    key: \"zoom\",\n    value: function zoom(_ref7) {\n      var pos = _ref7.pos,\n        startPos = _ref7.startPos,\n        scale = _ref7.scale;\n      assert(scale > 0, '`scale` must be a positive number');\n      var _this$_state2 = this._state,\n        startZoom = _this$_state2.startZoom,\n        startZoomLngLat = _this$_state2.startZoomLngLat;\n      if (!Number.isFinite(startZoom)) {\n        startZoom = this._viewportProps.zoom;\n        startZoomLngLat = this._unproject(startPos) || this._unproject(pos);\n      }\n      assert(startZoomLngLat, '`startZoomLngLat` prop is required ' + 'for zoom behavior to calculate where to position the map.');\n      var zoom = this._calculateNewZoom({\n        scale: scale,\n        startZoom: startZoom || 0\n      });\n      var zoomedViewport = new WebMercatorViewport(Object.assign({}, this._viewportProps, {\n        zoom: zoom\n      }));\n      var _zoomedViewport$getMa = zoomedViewport.getMapCenterByLngLatPosition({\n          lngLat: startZoomLngLat,\n          pos: pos\n        }),\n        _zoomedViewport$getMa2 = _slicedToArray(_zoomedViewport$getMa, 2),\n        longitude = _zoomedViewport$getMa2[0],\n        latitude = _zoomedViewport$getMa2[1];\n      return this._getUpdatedMapState({\n        zoom: zoom,\n        longitude: longitude,\n        latitude: latitude\n      });\n    }\n  }, {\n    key: \"zoomEnd\",\n    value: function zoomEnd() {\n      return this._getUpdatedMapState({\n        startZoomLngLat: null,\n        startZoom: null\n      });\n    }\n  }, {\n    key: \"_getUpdatedMapState\",\n    value: function _getUpdatedMapState(newProps) {\n      return new MapState(Object.assign({}, this._viewportProps, this._state, newProps));\n    }\n  }, {\n    key: \"_applyConstraints\",\n    value: function _applyConstraints(props) {\n      var maxZoom = props.maxZoom,\n        minZoom = props.minZoom,\n        zoom = props.zoom;\n      props.zoom = clamp(zoom, minZoom, maxZoom);\n      var maxPitch = props.maxPitch,\n        minPitch = props.minPitch,\n        pitch = props.pitch;\n      props.pitch = clamp(pitch, minPitch, maxPitch);\n      Object.assign(props, normalizeViewportProps(props));\n      return props;\n    }\n  }, {\n    key: \"_unproject\",\n    value: function _unproject(pos) {\n      var viewport = new WebMercatorViewport(this._viewportProps);\n      return pos && viewport.unproject(pos);\n    }\n  }, {\n    key: \"_calculateNewLngLat\",\n    value: function _calculateNewLngLat(_ref8) {\n      var startPanLngLat = _ref8.startPanLngLat,\n        pos = _ref8.pos;\n      var viewport = new WebMercatorViewport(this._viewportProps);\n      return viewport.getMapCenterByLngLatPosition({\n        lngLat: startPanLngLat,\n        pos: pos\n      });\n    }\n  }, {\n    key: \"_calculateNewZoom\",\n    value: function _calculateNewZoom(_ref9) {\n      var scale = _ref9.scale,\n        startZoom = _ref9.startZoom;\n      var _this$_viewportProps = this._viewportProps,\n        maxZoom = _this$_viewportProps.maxZoom,\n        minZoom = _this$_viewportProps.minZoom;\n      var zoom = startZoom + Math.log2(scale);\n      return clamp(zoom, minZoom, maxZoom);\n    }\n  }, {\n    key: \"_calculateNewPitchAndBearing\",\n    value: function _calculateNewPitchAndBearing(_ref10) {\n      var deltaScaleX = _ref10.deltaScaleX,\n        deltaScaleY = _ref10.deltaScaleY,\n        startBearing = _ref10.startBearing,\n        startPitch = _ref10.startPitch;\n      deltaScaleY = clamp(deltaScaleY, -1, 1);\n      var _this$_viewportProps2 = this._viewportProps,\n        minPitch = _this$_viewportProps2.minPitch,\n        maxPitch = _this$_viewportProps2.maxPitch;\n      var bearing = startBearing + 180 * deltaScaleX;\n      var pitch = startPitch;\n      if (deltaScaleY > 0) {\n        pitch = startPitch + deltaScaleY * (maxPitch - startPitch);\n      } else if (deltaScaleY < 0) {\n        pitch = startPitch - deltaScaleY * (minPitch - startPitch);\n      }\n      return {\n        pitch: pitch,\n        bearing: bearing\n      };\n    }\n  }, {\n    key: \"_getRotationParams\",\n    value: function _getRotationParams(pos, startPos) {\n      var deltaX = pos[0] - startPos[0];\n      var deltaY = pos[1] - startPos[1];\n      var centerY = pos[1];\n      var startY = startPos[1];\n      var _this$_viewportProps3 = this._viewportProps,\n        width = _this$_viewportProps3.width,\n        height = _this$_viewportProps3.height;\n      var deltaScaleX = deltaX / width;\n      var deltaScaleY = 0;\n      if (deltaY > 0) {\n        if (Math.abs(height - startY) > PITCH_MOUSE_THRESHOLD) {\n          deltaScaleY = deltaY / (startY - height) * PITCH_ACCEL;\n        }\n      } else if (deltaY < 0) {\n        if (startY > PITCH_MOUSE_THRESHOLD) {\n          deltaScaleY = 1 - centerY / startY;\n        }\n      }\n      deltaScaleY = Math.min(1, Math.max(-1, deltaScaleY));\n      return {\n        deltaScaleX: deltaScaleX,\n        deltaScaleY: deltaScaleY\n      };\n    }\n  }]);\n  return MapState;\n}();\nexport { MapState as default };","map":{"version":3,"names":["WebMercatorViewport","normalizeViewportProps","clamp","assert","MAPBOX_LIMITS","minZoom","maxZoom","minPitch","maxPitch","DEFAULT_STATE","pitch","bearing","altitude","PITCH_MOUSE_THRESHOLD","PITCH_ACCEL","MapState","_ref","width","height","latitude","longitude","zoom","_ref$bearing","_ref$pitch","_ref$altitude","_ref$maxZoom","_ref$minZoom","_ref$maxPitch","_ref$minPitch","transitionDuration","transitionEasing","transitionInterpolator","transitionInterruption","startPanLngLat","startZoomLngLat","startRotatePos","startBearing","startPitch","startZoom","_classCallCheck","Number","isFinite","_viewportProps","_applyConstraints","_state","pos","_ref2","_getUpdatedMapState","_unproject","_ref3","startPos","_this$_calculateNewLn","_calculateNewLngLat","_this$_calculateNewLn2","_slicedToArray","_ref4","_ref5","_ref5$deltaAngleX","deltaAngleX","_ref5$deltaAngleY","deltaAngleY","_this$_state","newRotation","_calculateNewPitchAndBearing","_objectSpread","_getRotationParams","_ref6","_ref7","scale","_this$_state2","_calculateNewZoom","zoomedViewport","Object","assign","_zoomedViewport$getMa","getMapCenterByLngLatPosition","lngLat","_zoomedViewport$getMa2","newProps","props","viewport","unproject","_ref8","_ref9","_this$_viewportProps","Math","log2","deltaScaleX","_ref10","deltaScaleY","_this$_viewportProps2","deltaX","deltaY","centerY","startY","_this$_viewportProps3","abs","min","max"],"sources":["../../../src/utils/map-state.js"],"sourcesContent":["import WebMercatorViewport, {normalizeViewportProps} from 'viewport-mercator-project';\nimport {clamp} from './math-utils';\nimport assert from './assert';\n\n// MAPBOX LIMITS\nexport const MAPBOX_LIMITS = {\n  minZoom: 0,\n  maxZoom: 24,\n  minPitch: 0,\n  maxPitch: 85\n};\n\nconst DEFAULT_STATE = {\n  pitch: 0,\n  bearing: 0,\n  altitude: 1.5\n};\n\nconst PITCH_MOUSE_THRESHOLD = 5;\nconst PITCH_ACCEL = 1.2;\n\nexport default class MapState {\n  constructor({\n    /** Mapbox viewport properties */\n    /** The width of the viewport */\n    width,\n    /** The height of the viewport */\n    height,\n    /** The latitude at the center of the viewport */\n    latitude,\n    /** The longitude at the center of the viewport */\n    longitude,\n    /** The tile zoom level of the map. */\n    zoom,\n    /** The bearing of the viewport in degrees */\n    bearing = DEFAULT_STATE.bearing,\n    /** The pitch of the viewport in degrees */\n    pitch = DEFAULT_STATE.pitch,\n    /**\n     * Specify the altitude of the viewport camera\n     * Unit: map heights, default 1.5\n     * Non-public API, see https://github.com/mapbox/mapbox-gl-js/issues/1137\n     */\n    altitude = DEFAULT_STATE.altitude,\n\n    /** Viewport constraints */\n    maxZoom = MAPBOX_LIMITS.maxZoom,\n    minZoom = MAPBOX_LIMITS.minZoom,\n    maxPitch = MAPBOX_LIMITS.maxPitch,\n    minPitch = MAPBOX_LIMITS.minPitch,\n\n    /** Transition props */\n    transitionDuration,\n    transitionEasing,\n    transitionInterpolator,\n    transitionInterruption,\n\n    /** Interaction states, required to calculate change during transform */\n    /* The point on map being grabbed when the operation first started */\n    startPanLngLat,\n    /* Center of the zoom when the operation first started */\n    startZoomLngLat,\n    /* Cursor position when the rotate operation started */\n    startRotatePos,\n    /** Bearing when current perspective rotate operation started */\n    startBearing,\n    /** Pitch when current perspective rotate operation started */\n    startPitch,\n    /** Zoom when current zoom operation started */\n    startZoom\n  }) {\n    assert(Number.isFinite(width), '`width` must be supplied');\n    assert(Number.isFinite(height), '`height` must be supplied');\n    assert(Number.isFinite(longitude), '`longitude` must be supplied');\n    assert(Number.isFinite(latitude), '`latitude` must be supplied');\n    assert(Number.isFinite(zoom), '`zoom` must be supplied');\n\n    this._viewportProps = this._applyConstraints({\n      width,\n      height,\n      latitude,\n      longitude,\n      zoom,\n      bearing,\n      pitch,\n      altitude,\n      maxZoom,\n      minZoom,\n      maxPitch,\n      minPitch,\n      transitionDuration,\n      transitionEasing,\n      transitionInterpolator,\n      transitionInterruption\n    });\n\n    this._state = {\n      startPanLngLat,\n      startZoomLngLat,\n      startRotatePos,\n      startBearing,\n      startPitch,\n      startZoom\n    };\n  }\n\n  /* Public API */\n\n  getViewportProps() {\n    return this._viewportProps;\n  }\n\n  getState() {\n    return this._state;\n  }\n\n  /**\n   * Start panning\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the pointer grabs\n   */\n  panStart({pos}) {\n    return this._getUpdatedMapState({\n      startPanLngLat: this._unproject(pos)\n    });\n  }\n\n  /**\n   * Pan\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the pointer is\n   * @param {[Number, Number]} [params.startPos] - where the pointer grabbed at\n   *   the start of the operation. Must be supplied of `panStart()` was not called\n   */\n  pan({pos, startPos}) {\n    const startPanLngLat = this._state.startPanLngLat || this._unproject(startPos);\n\n    if (!startPanLngLat) {\n      return this;\n    }\n\n    const [longitude, latitude] = this._calculateNewLngLat({\n      startPanLngLat,\n      pos\n    });\n\n    return this._getUpdatedMapState({\n      longitude,\n      latitude\n    });\n  }\n\n  /**\n   * End panning\n   * Must call if `panStart()` was called\n   */\n  panEnd() {\n    return this._getUpdatedMapState({\n      startPanLngLat: null\n    });\n  }\n\n  /**\n   * Start rotating\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the center is\n   */\n  rotateStart({pos}) {\n    return this._getUpdatedMapState({\n      startRotatePos: pos,\n      startBearing: this._viewportProps.bearing,\n      startPitch: this._viewportProps.pitch\n    });\n  }\n\n  /**\n   * Rotate\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the center is\n   * @param {Number} params.deltaAngleX - the change to bearing.\n   * @param {Number} params.deltaAngleY - the change to pitch.\n   */\n  rotate({pos, deltaAngleX = 0, deltaAngleY = 0}) {\n    const {startRotatePos, startBearing, startPitch} = this._state;\n\n    if (!Number.isFinite(startBearing) || !Number.isFinite(startPitch)) {\n      return this;\n    }\n\n    let newRotation;\n    if (pos) {\n      newRotation = this._calculateNewPitchAndBearing({\n        ...this._getRotationParams(pos, startRotatePos),\n        startBearing,\n        startPitch\n      });\n    } else {\n      newRotation = {\n        bearing: startBearing + deltaAngleX,\n        pitch: startPitch + deltaAngleY\n      };\n    }\n\n    return this._getUpdatedMapState(newRotation);\n  }\n\n  /**\n   * End rotating\n   * Must call if `rotateStart()` was called\n   */\n  rotateEnd() {\n    return this._getUpdatedMapState({\n      startBearing: null,\n      startPitch: null\n    });\n  }\n\n  /**\n   * Start zooming\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the center is\n   */\n  zoomStart({pos}) {\n    return this._getUpdatedMapState({\n      startZoomLngLat: this._unproject(pos),\n      startZoom: this._viewportProps.zoom\n    });\n  }\n\n  /**\n   * Zoom\n   * @param {Object} params\n   * @param {[Number, Number]} params.pos - position on screen where the current center is\n   * @param {[Number, Number]} [params.startPos] - the center position at\n   *   the start of the operation. Must be supplied of `zoomStart()` was not called\n   * @param {Number} params.scale - a number between [0, 1] specifying the accumulated\n   *   relative scale.\n   */\n  zoom({pos, startPos, scale}) {\n    assert(scale > 0, '`scale` must be a positive number');\n\n    // Make sure we zoom around the current mouse position rather than map center\n    let {startZoom, startZoomLngLat} = this._state;\n\n    if (!Number.isFinite(startZoom)) {\n      // We have two modes of zoom:\n      // scroll zoom that are discrete events (transform from the current zoom level),\n      // and pinch zoom that are continuous events (transform from the zoom level when\n      // pinch started).\n      // If startZoom state is defined, then use the startZoom state;\n      // otherwise assume discrete zooming\n      startZoom = this._viewportProps.zoom;\n      startZoomLngLat = this._unproject(startPos) || this._unproject(pos);\n    }\n\n    // take the start lnglat and put it where the mouse is down.\n    assert(\n      startZoomLngLat,\n      '`startZoomLngLat` prop is required ' +\n        'for zoom behavior to calculate where to position the map.'\n    );\n\n    const zoom = this._calculateNewZoom({scale, startZoom: startZoom || 0});\n\n    const zoomedViewport = new WebMercatorViewport(Object.assign({}, this._viewportProps, {zoom}));\n    const [longitude, latitude] = zoomedViewport.getMapCenterByLngLatPosition({\n      lngLat: startZoomLngLat,\n      pos\n    });\n\n    return this._getUpdatedMapState({\n      zoom,\n      longitude,\n      latitude\n    });\n  }\n\n  /**\n   * End zooming\n   * Must call if `zoomStart()` was called\n   */\n  zoomEnd() {\n    return this._getUpdatedMapState({\n      startZoomLngLat: null,\n      startZoom: null\n    });\n  }\n\n  /* Private methods */\n\n  _getUpdatedMapState(newProps) {\n    // Update _viewportProps\n    return new MapState(Object.assign({}, this._viewportProps, this._state, newProps));\n  }\n\n  // Apply any constraints (mathematical or defined by _viewportProps) to map state\n  _applyConstraints(props) {\n    // Ensure zoom is within specified range\n    const {maxZoom, minZoom, zoom} = props;\n    props.zoom = clamp(zoom, minZoom, maxZoom);\n\n    // Ensure pitch is within specified range\n    const {maxPitch, minPitch, pitch} = props;\n    props.pitch = clamp(pitch, minPitch, maxPitch);\n\n    Object.assign(props, normalizeViewportProps(props));\n\n    return props;\n  }\n\n  _unproject(pos) {\n    const viewport = new WebMercatorViewport(this._viewportProps);\n    return pos && viewport.unproject(pos);\n  }\n\n  // Calculate a new lnglat based on pixel dragging position\n  _calculateNewLngLat({startPanLngLat, pos}) {\n    const viewport = new WebMercatorViewport(this._viewportProps);\n    return viewport.getMapCenterByLngLatPosition({\n      lngLat: startPanLngLat,\n      pos\n    });\n  }\n\n  // Calculates new zoom\n  _calculateNewZoom({scale, startZoom}) {\n    const {maxZoom, minZoom} = this._viewportProps;\n    const zoom = startZoom + Math.log2(scale);\n    return clamp(zoom, minZoom, maxZoom);\n  }\n\n  // Calculates a new pitch and bearing from a position (coming from an event)\n  _calculateNewPitchAndBearing({deltaScaleX, deltaScaleY, startBearing, startPitch}) {\n    // clamp deltaScaleY to [-1, 1] so that rotation is constrained between minPitch and maxPitch.\n    // deltaScaleX does not need to be clamped as bearing does not have constraints.\n    deltaScaleY = clamp(deltaScaleY, -1, 1);\n\n    const {minPitch, maxPitch} = this._viewportProps;\n\n    const bearing = startBearing + 180 * deltaScaleX;\n    let pitch = startPitch;\n    if (deltaScaleY > 0) {\n      // Gradually increase pitch\n      pitch = startPitch + deltaScaleY * (maxPitch - startPitch);\n    } else if (deltaScaleY < 0) {\n      // Gradually decrease pitch\n      pitch = startPitch - deltaScaleY * (minPitch - startPitch);\n    }\n\n    return {\n      pitch,\n      bearing\n    };\n  }\n\n  _getRotationParams(pos, startPos) {\n    const deltaX = pos[0] - startPos[0];\n    const deltaY = pos[1] - startPos[1];\n    const centerY = pos[1];\n    const startY = startPos[1];\n    const {width, height} = this._viewportProps;\n\n    const deltaScaleX = deltaX / width;\n    let deltaScaleY = 0;\n\n    if (deltaY > 0) {\n      if (Math.abs(height - startY) > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to -1 as we drag upwards\n        deltaScaleY = (deltaY / (startY - height)) * PITCH_ACCEL;\n      }\n    } else if (deltaY < 0) {\n      if (startY > PITCH_MOUSE_THRESHOLD) {\n        // Move from 0 to 1 as we drag upwards\n        deltaScaleY = 1 - centerY / startY;\n      }\n    }\n    deltaScaleY = Math.min(1, Math.max(-1, deltaScaleY));\n    return {deltaScaleX, deltaScaleY};\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}