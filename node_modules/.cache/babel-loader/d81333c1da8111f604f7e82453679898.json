{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n  return target;\n}\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport useMapControl, { mapControlPropTypes } from '../components/use-map-control';\nvar propTypes = Object.assign({}, mapControlPropTypes, {\n  redraw: PropTypes.func.isRequired,\n  style: PropTypes.object\n});\nvar defaultProps = {\n  captureScroll: false,\n  captureDrag: false,\n  captureClick: false,\n  captureDoubleClick: false,\n  capturePointerMove: false\n};\nfunction SVGOverlay(props) {\n  var _useMapControl = useMapControl(props),\n    context = _useMapControl.context,\n    containerRef = _useMapControl.containerRef;\n  var viewport = context.viewport,\n    isDragging = context.isDragging;\n  var style = _objectSpread({\n    position: 'absolute',\n    left: 0,\n    top: 0\n  }, props.style);\n  return React.createElement(\"svg\", {\n    width: viewport.width,\n    height: viewport.height,\n    ref: containerRef,\n    style: style\n  }, props.redraw({\n    width: viewport.width,\n    height: viewport.height,\n    isDragging: isDragging,\n    project: viewport.project,\n    unproject: viewport.unproject\n  }));\n}\nSVGOverlay.propTypes = propTypes;\nSVGOverlay.defaultProps = defaultProps;\nexport default SVGOverlay;","map":{"version":3,"names":["React","PropTypes","useMapControl","mapControlPropTypes","propTypes","Object","assign","redraw","func","isRequired","style","object","defaultProps","captureScroll","captureDrag","captureClick","captureDoubleClick","capturePointerMove","SVGOverlay","props","_useMapControl","context","containerRef","viewport","isDragging","_objectSpread","position","left","top","createElement","width","height","ref","project","unproject"],"sources":["../../../src/overlays/svg-overlay.js"],"sourcesContent":["// Copyright (c) 2015 Uber Technologies, Inc.\n\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\nimport * as React from 'react';\nimport * as PropTypes from 'prop-types';\nimport useMapControl, {mapControlPropTypes} from '../components/use-map-control';\n\nconst propTypes = Object.assign({}, mapControlPropTypes, {\n  redraw: PropTypes.func.isRequired,\n  style: PropTypes.object\n});\n\nconst defaultProps = {\n  captureScroll: false,\n  captureDrag: false,\n  captureClick: false,\n  captureDoubleClick: false,\n  capturePointerMove: false\n};\n\nfunction SVGOverlay(props) {\n  const {context, containerRef} = useMapControl(props);\n  const {viewport, isDragging} = context;\n  const style = {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    ...props.style\n  };\n\n  return (\n    <svg width={viewport.width} height={viewport.height} ref={containerRef} style={style}>\n      {props.redraw({\n        width: viewport.width,\n        height: viewport.height,\n        isDragging,\n        project: viewport.project,\n        unproject: viewport.unproject\n      })}\n    </svg>\n  );\n}\n\nSVGOverlay.propTypes = propTypes;\nSVGOverlay.defaultProps = defaultProps;\n\nexport default SVGOverlay;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,YAA3B;AACA,OAAOC,aAAP,IAAuBC,mBAAvB,QAAiD,+BAAjD;AAEA,IAAMC,SAAS,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,mBAAlB,EAAuC;EACvDI,MAAM,EAAEN,SAAS,CAACO,IAAV,CAAeC,UADgC;EAEvDC,KAAK,EAAET,SAAS,CAACU;AAFsC,CAAvC,CAAlB;AAKA,IAAMC,YAAY,GAAG;EACnBC,aAAa,EAAE,KADI;EAEnBC,WAAW,EAAE,KAFM;EAGnBC,YAAY,EAAE,KAHK;EAInBC,kBAAkB,EAAE,KAJD;EAKnBC,kBAAkB,EAAE;AALD,CAArB;AAQA,SAASC,UAATA,CAAoBC,KAApB,EAA2B;EAAA,IAAAC,cAAA,GACOlB,aAAa,CAACiB,KAAD,CADpB;IAClBE,OADkB,GAAAD,cAAA,CAClBC,OADkB;IACTC,YADS,GAAAF,cAAA,CACTE,YADS;EAAA,IAElBC,QAFkB,GAEMF,OAFN,CAElBE,QAFkB;IAERC,UAFQ,GAEMH,OAFN,CAERG,UAFQ;EAGzB,IAAMd,KAAK,GAAAe,aAAA;IACTC,QAAQ,EAAE,UADD;IAETC,IAAI,EAAE,CAFG;IAGTC,GAAG,EAAE;EAHI,GAINT,KAAK,CAACT,KAJA,CAAX;EAOA,OACEV,KAAA,CAAA6B,aAAA;IAAKC,KAAK,EAAEP,QAAQ,CAACO,KAArB;IAA4BC,MAAM,EAAER,QAAQ,CAACQ,MAA7C;IAAqDC,GAAG,EAAEV,YAA1D;IAAwEZ,KAAK,EAAEA;EAA/E,GACGS,KAAK,CAACZ,MAAN,CAAa;IACZuB,KAAK,EAAEP,QAAQ,CAACO,KADJ;IAEZC,MAAM,EAAER,QAAQ,CAACQ,MAFL;IAGZP,UAAU,EAAVA,UAHY;IAIZS,OAAO,EAAEV,QAAQ,CAACU,OAJN;IAKZC,SAAS,EAAEX,QAAQ,CAACW;EALR,CAAb,CADH,CADF;AAWD;AAEDhB,UAAU,CAACd,SAAX,GAAuBA,SAAvB;AACAc,UAAU,CAACN,YAAX,GAA0BA,YAA1B;AAEA,eAAeM,UAAf"},"metadata":{},"sourceType":"module"}