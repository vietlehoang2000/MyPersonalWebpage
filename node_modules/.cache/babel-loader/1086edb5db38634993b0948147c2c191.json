{"ast":null,"code":"import _slicedToArray from \"/Users/vietle/Documents/personal-project/MyPersonalWebpage/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _createForOfIteratorHelper from \"/Users/vietle/Documents/personal-project/MyPersonalWebpage/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _objectSpread from \"/Users/vietle/Documents/personal-project/MyPersonalWebpage/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _classCallCheck from \"/Users/vietle/Documents/personal-project/MyPersonalWebpage/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/vietle/Documents/personal-project/MyPersonalWebpage/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { Manager } from './utils/hammer';\nimport WheelInput from './inputs/wheel-input';\nimport MoveInput from './inputs/move-input';\nimport KeyInput from './inputs/key-input';\nimport ContextmenuInput from './inputs/contextmenu-input';\nimport EventRegistrar from './utils/event-registrar';\nimport { BASIC_EVENT_ALIASES, EVENT_RECOGNIZER_MAP, GESTURE_EVENT_ALIASES, RECOGNIZERS, RECOGNIZER_COMPATIBLE_MAP, RECOGNIZER_FALLBACK_MAP } from './constants';\nvar DEFAULT_OPTIONS = {\n  // event handlers\n  events: null,\n  // custom recognizers\n  recognizers: null,\n  recognizerOptions: {},\n  // Manager class\n  Manager: Manager,\n  // allow browser default touch action\n  // https://github.com/uber/react-map-gl/issues/506\n  touchAction: 'none',\n  tabIndex: 0\n};\n// Unified API for subscribing to events about both\n// basic input events (e.g. 'mousemove', 'touchstart', 'wheel')\n// and gestural input (e.g. 'click', 'tap', 'panstart').\n// Delegates gesture related event registration and handling to Hammer.js.\nvar EventManager = /*#__PURE__*/function () {\n  function EventManager() {\n    var _this = this;\n    var element = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    var options = arguments.length > 1 ? arguments[1] : undefined;\n    _classCallCheck(this, EventManager);\n    /**\n     * Handle basic events using the 'hammer.input' Hammer.js API:\n     * Before running Recognizers, Hammer emits a 'hammer.input' event\n     * with the basic event info. This function emits all basic events\n     * aliased to the \"class\" of event received.\n     * See constants.BASIC_EVENT_CLASSES basic event class definitions.\n     */\n    this._onBasicInput = function (event) {\n      var srcEvent = event.srcEvent;\n      var alias = BASIC_EVENT_ALIASES[srcEvent.type];\n      if (alias) {\n        // fire all events aliased to srcEvent.type\n        _this.manager.emit(alias, event);\n      }\n    };\n    /**\n     * Handle events not supported by Hammer.js,\n     * and pipe back out through same (Hammer) channel used by other events.\n     */\n    this._onOtherEvent = function (event) {\n      // console.log('onotherevent', event.type, event)\n      _this.manager.emit(event.type, event);\n    };\n    this.options = _objectSpread(_objectSpread({}, DEFAULT_OPTIONS), options);\n    this.events = new Map();\n    this.setElement(element);\n    // Register all passed events.\n    var events = this.options.events;\n    if (events) {\n      this.on(events);\n    }\n  }\n  _createClass(EventManager, [{\n    key: \"getElement\",\n    value: function getElement() {\n      return this.element;\n    }\n  }, {\n    key: \"setElement\",\n    value: function setElement(element) {\n      var _this2 = this;\n      if (this.element) {\n        // unregister all events\n        this.destroy();\n      }\n      this.element = element;\n      if (!element) {\n        return;\n      }\n      var options = this.options;\n      var ManagerClass = options.Manager;\n      this.manager = new ManagerClass(element, {\n        touchAction: options.touchAction,\n        recognizers: options.recognizers || RECOGNIZERS\n      }).on('hammer.input', this._onBasicInput);\n      if (!options.recognizers) {\n        // Set default recognize withs\n        // http://hammerjs.github.io/recognize-with/\n        Object.keys(RECOGNIZER_COMPATIBLE_MAP).forEach(function (name) {\n          var recognizer = _this2.manager.get(name);\n          if (recognizer) {\n            RECOGNIZER_COMPATIBLE_MAP[name].forEach(function (otherName) {\n              recognizer.recognizeWith(otherName);\n            });\n          }\n        });\n      }\n      // Set recognizer options\n      for (var recognizerName in options.recognizerOptions) {\n        var recognizer = this.manager.get(recognizerName);\n        if (recognizer) {\n          var recognizerOption = options.recognizerOptions[recognizerName];\n          // `enable` is managed by the event registrations\n          delete recognizerOption.enable;\n          recognizer.set(recognizerOption);\n        }\n      }\n      // Handle events not handled by Hammer.js:\n      // - mouse wheel\n      // - pointer/touch/mouse move\n      this.wheelInput = new WheelInput(element, this._onOtherEvent, {\n        enable: false\n      });\n      this.moveInput = new MoveInput(element, this._onOtherEvent, {\n        enable: false\n      });\n      this.keyInput = new KeyInput(element, this._onOtherEvent, {\n        enable: false,\n        tabIndex: options.tabIndex\n      });\n      this.contextmenuInput = new ContextmenuInput(element, this._onOtherEvent, {\n        enable: false\n      });\n      // Register all existing events\n      var _iterator = _createForOfIteratorHelper(this.events),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var _step$value = _slicedToArray(_step.value, 2),\n            eventAlias = _step$value[0],\n            eventRegistrar = _step$value[1];\n          if (!eventRegistrar.isEmpty()) {\n            // Enable recognizer for this event.\n            this._toggleRecognizer(eventRegistrar.recognizerName, true);\n            this.manager.on(eventAlias, eventRegistrar.handleEvent);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    }\n    // Tear down internal event management implementations.\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.element) {\n        // wheelInput etc. are created in setElement() and therefore\n        // cannot exist if there is no element\n        this.wheelInput.destroy();\n        this.moveInput.destroy();\n        this.keyInput.destroy();\n        this.contextmenuInput.destroy();\n        this.manager.destroy();\n        this.wheelInput = null;\n        this.moveInput = null;\n        this.keyInput = null;\n        this.contextmenuInput = null;\n        this.manager = null;\n        this.element = null;\n      }\n    }\n    /** Register an event handler function to be called on `event` */\n  }, {\n    key: \"on\",\n    value: function on(event, handler, opts) {\n      this._addEventHandler(event, handler, opts, false);\n    }\n  }, {\n    key: \"once\",\n    value: function once(event, handler, opts) {\n      this._addEventHandler(event, handler, opts, true);\n    }\n  }, {\n    key: \"watch\",\n    value: function watch(event, handler, opts) {\n      this._addEventHandler(event, handler, opts, false, true);\n    }\n  }, {\n    key: \"off\",\n    value: function off(event, handler) {\n      this._removeEventHandler(event, handler);\n    }\n    /*\n     * Enable/disable recognizer for the given event\n     */\n  }, {\n    key: \"_toggleRecognizer\",\n    value: function _toggleRecognizer(name, enabled) {\n      var manager = this.manager;\n      if (!manager) {\n        return;\n      }\n      var recognizer = manager.get(name);\n      // @ts-ignore\n      if (recognizer && recognizer.options.enable !== enabled) {\n        recognizer.set({\n          enable: enabled\n        });\n        var fallbackRecognizers = RECOGNIZER_FALLBACK_MAP[name];\n        if (fallbackRecognizers && !this.options.recognizers) {\n          // Set default require failures\n          // http://hammerjs.github.io/require-failure/\n          fallbackRecognizers.forEach(function (otherName) {\n            var otherRecognizer = manager.get(otherName);\n            if (enabled) {\n              // Wait for this recognizer to fail\n              otherRecognizer.requireFailure(name);\n              /**\n               * This seems to be a bug in hammerjs:\n               * requireFailure() adds both ways\n               * dropRequireFailure() only drops one way\n               * https://github.com/hammerjs/hammer.js/blob/master/src/recognizerjs/\n                 recognizer-constructor.js#L136\n               */\n              recognizer.dropRequireFailure(otherName);\n            } else {\n              // Do not wait for this recognizer to fail\n              otherRecognizer.dropRequireFailure(name);\n            }\n          });\n        }\n      }\n      this.wheelInput.enableEventType(name, enabled);\n      this.moveInput.enableEventType(name, enabled);\n      this.keyInput.enableEventType(name, enabled);\n      this.contextmenuInput.enableEventType(name, enabled);\n    }\n    /**\n     * Process the event registration for a single event + handler.\n     */\n  }, {\n    key: \"_addEventHandler\",\n    value: function _addEventHandler(event, handler, opts, once, passive) {\n      if (typeof event !== 'string') {\n        // @ts-ignore\n        opts = handler;\n        // If `event` is a map, call `on()` for each entry.\n        for (var eventName in event) {\n          this._addEventHandler(eventName, event[eventName], opts, once, passive);\n        }\n        return;\n      }\n      var manager = this.manager,\n        events = this.events;\n      // Alias to a recognized gesture as necessary.\n      var eventAlias = GESTURE_EVENT_ALIASES[event] || event;\n      var eventRegistrar = events.get(eventAlias);\n      if (!eventRegistrar) {\n        eventRegistrar = new EventRegistrar(this);\n        events.set(eventAlias, eventRegistrar);\n        // Enable recognizer for this event.\n        eventRegistrar.recognizerName = EVENT_RECOGNIZER_MAP[eventAlias] || eventAlias;\n        // Listen to the event\n        if (manager) {\n          manager.on(eventAlias, eventRegistrar.handleEvent);\n        }\n      }\n      eventRegistrar.add(event, handler, opts, once, passive);\n      if (!eventRegistrar.isEmpty()) {\n        this._toggleRecognizer(eventRegistrar.recognizerName, true);\n      }\n    }\n    /**\n     * Process the event deregistration for a single event + handler.\n     */\n  }, {\n    key: \"_removeEventHandler\",\n    value: function _removeEventHandler(event, handler) {\n      if (typeof event !== 'string') {\n        // If `event` is a map, call `off()` for each entry.\n        for (var eventName in event) {\n          this._removeEventHandler(eventName, event[eventName]);\n        }\n        return;\n      }\n      var events = this.events;\n      // Alias to a recognized gesture as necessary.\n      var eventAlias = GESTURE_EVENT_ALIASES[event] || event;\n      var eventRegistrar = events.get(eventAlias);\n      if (!eventRegistrar) {\n        return;\n      }\n      eventRegistrar.remove(event, handler);\n      if (eventRegistrar.isEmpty()) {\n        var recognizerName = eventRegistrar.recognizerName;\n        // Disable recognizer if no more handlers are attached to its events\n        var isRecognizerUsed = false;\n        var _iterator2 = _createForOfIteratorHelper(events.values()),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var eh = _step2.value;\n            if (eh.recognizerName === recognizerName && !eh.isEmpty()) {\n              isRecognizerUsed = true;\n              break;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        if (!isRecognizerUsed) {\n          this._toggleRecognizer(recognizerName, false);\n        }\n      }\n    }\n  }]);\n  return EventManager;\n}();\nexport { EventManager as default };","map":{"version":3,"names":["Manager","WheelInput","MoveInput","KeyInput","ContextmenuInput","EventRegistrar","BASIC_EVENT_ALIASES","EVENT_RECOGNIZER_MAP","GESTURE_EVENT_ALIASES","RECOGNIZERS","RECOGNIZER_COMPATIBLE_MAP","RECOGNIZER_FALLBACK_MAP","DEFAULT_OPTIONS","events","recognizers","recognizerOptions","touchAction","tabIndex","EventManager","_this","element","arguments","length","undefined","options","_classCallCheck","_onBasicInput","event","srcEvent","alias","type","manager","emit","_onOtherEvent","_objectSpread","Map","setElement","on","_createClass","key","value","getElement","_this2","destroy","ManagerClass","Object","keys","forEach","name","recognizer","get","otherName","recognizeWith","recognizerName","recognizerOption","enable","set","wheelInput","moveInput","keyInput","contextmenuInput","_iterator","_createForOfIteratorHelper","_step","s","n","done","_step$value","_slicedToArray","eventAlias","eventRegistrar","isEmpty","_toggleRecognizer","handleEvent","err","e","f","handler","opts","_addEventHandler","once","watch","off","_removeEventHandler","enabled","fallbackRecognizers","otherRecognizer","requireFailure","dropRequireFailure","enableEventType","passive","eventName","add","remove","isRecognizerUsed","_iterator2","values","_step2","eh","default"],"sources":["../../src/event-manager.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}